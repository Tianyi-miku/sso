// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @unique @default(autoincrement())
  username    String        @unique
  password    String
  sex         String?
  telephone   Int?
  email       String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now())
  Logger      Logger[]
  Role        Role?         @relation(fields: [roleId], references: [id])
  roleId      Int?
  Client      Client[]
  LoginLogger LoginLogger[]
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String
  content   String?
  remark    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  User      User[]
}

model Logger {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  controls  String?  @db.Text
  remark    String?
  createdAt DateTime @default(now())
}

model Client {
  id        Int      @id @unique @default(autoincrement())
  name      String   @unique
  address   String?
  remark    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}

model LoginLogger {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  controls  String?
  remark    String?
  createdAt DateTime @default(now())
}
